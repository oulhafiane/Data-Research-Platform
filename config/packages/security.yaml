security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        user:
            entity:
                class: App\Entity\User
                property: email
        token:
            entity:
                class: App\Entity\SurveyToken
                property: uuid
    firewalls:
        anon:
            pattern:    ^/api/anon
            stateless:  true
            provider: token
            guard:
                authenticators:
                    - App\Security\TokenAuthenticator
        admin:
            pattern:    ^/api/admin
            stateless:  true
            provider: user
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        current:
            pattern:    ^/api/current
            stateless:  true
            provider: user
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        public:
            pattern:    ^/api
            methods: [GET]
            stateless:  true
            anonymous: true
        public_path:
            pattern:    ^/api/public
            methods: [PATCH, POST]
            stateless:  true
            anonymous: true
        register:
            pattern:    ^/api/register$
            methods: [POST]
            stateless:  true
            anonymous: true
        forgot:
            pattern:    ^/api/forgotPassword$
            methods: [POST]
            stateless:  true
            anonymous: true
        change:
            pattern:    ^/api/changePassword$
            methods: [POST]
            stateless:  true
            anonymous: true
        refresh:
            pattern:  ^/api/token/refresh$
            stateless: true
            anonymous: true
        loginOauth:
            pattern:    ^/api/oauth$
            methods: [POST]
            stateless:  true
            anonymous: true
        login:
            pattern:    ^/api/auth$
            methods: [POST]
            stateless:  true
            anonymous: true
            provider: user
            json_login:
                check_path:         /api/auth
                success_handler:    lexik_jwt_authentication.handler.authentication_success
                failure_handler:    lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:    ^/api
            stateless:  true
            provider: user
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/api/register$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }
         - { path: ^/api/forgotPassword$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }
         - { path: ^/api/changePassword$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }
         - { path: ^/api/oauth$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }
         - { path: ^/api/admin, roles: ROLE_ADMIN }
         - { path: ^/api/current, roles: IS_AUTHENTICATED_FULLY }
         - { path: ^/api/public, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [PATCH, POST] }
         - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET] }
         - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
